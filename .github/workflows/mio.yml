name: Build and Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.3.0
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3.9.0
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build APK with Gradle
        run: |
          echo "${{ secrets.SIGN_KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
          ./gradlew :app:assembleRelease
        env:
          KEYSTORE_PATH: "../keystore.jks"
          KEYSTORE_PASSWORD: ${{ secrets.SIGN_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.SIGN_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.SIGN_KEY_PASSWORD }}

      - name: Extract APK version code and version name
        id: version
        run: |
          VERSION_CODE=$(grep versionCode app/build.gradle | awk '{print $2}')
          VERSION_NAME=$(grep versionName app/build.gradle | awk '{print $2}' | tr -d '"')
          echo "VERSION_CODE=$VERSION_CODE" >> $GITHUB_ENV
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: "v${{ env.VERSION_NAME }}"
          release_name: "Release v${{ env.VERSION_NAME }}"
          body: "Release build for commit ${{ github.sha }}.\n\nAPK version code: ${{ env.VERSION_CODE }}\nAPK version name: ${{ env.VERSION_NAME }}"
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.HUB_TOKEN }}

      - name: Upload APK to Release
        uses: actions/upload-artifact@v3
        with:
          path: './app/build/outputs/*'
          name: app-release-${{ env.VERSION_NAME }}.apk