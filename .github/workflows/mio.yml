name: main

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ !startsWith(github.event.head_commit.message, '[skip ci]') }}

    steps:
      - uses: actions/checkout@v3.3.0
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: set up JDK 17
        uses: actions/setup-java@v3.9.0
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Cache Gradle Dependencies
        uses: actions/cache@v3.2.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: gradle-deps-core-${{ hashFiles('**/build.gradle.kts', '**/build.gradle', '**/libs.versions.toml') }}
          restore-keys: |
            gradle-deps

      - name: Cache Gradle Build
        uses: actions/cache@v3.2.4
        with:
          path: |
            ~/.gradle/caches/build-cache-*
            ~/.gradle/buildOutputCleanup/cache.properties
          key: gradle-builds-core-${{ github.sha }}
          restore-keys: |
            gradle-builds

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: |
          echo "${{ secrets.SIGN_KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
          ./gradlew :app:assembleRelease
        env:
          KEYSTORE_PATH: "../keystore.jks"
          KEYSTORE_PASSWORD: ${{ secrets.SIGN_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.SIGN_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.SIGN_KEY_PASSWORD }}

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        if: ${{ !github.event.pull_request }}
        with:
          path: './app/build/outputs/*'
          name: build_output_${{ github.event.head_commit.id }}.zip

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: "Release ${{ github.sha }}"
          body: "Release build for commit ${{ github.sha }}"
          draft: false
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: './app/build/outputs/apk/release/app-release.apk'
          asset_name: app-release.apk
          asset_content_type: application/vnd.android.package-archive